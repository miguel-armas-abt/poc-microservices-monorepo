---
# Source: generic-database-chart/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: postgres-db-secret
type: Opaque
data:
    POSTGRES_DB: "cG9zdGdyZXM="
    POSTGRES_PASSWORD: "cXdlcnR5"
    POSTGRES_USER: "cG9zdGdyZXM="
---
# Source: generic-database-chart/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-db-config-map
data:
  initdb.sh: |-
    #!/bin/bash
    set -e
    psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL
        CREATE USER poc_user WITH PASSWORD 'qwerty';
        ALTER USER poc_user WITH SUPERUSER;
        CREATE DATABASE db_invoices;
        GRANT ALL PRIVILEGES ON DATABASE db_invoices TO poc_user;
    EOSQL
---
# Source: generic-database-chart/templates/persistentvolume.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-db-pv
  labels:
    type: local
    app: postgres-db
spec:
  storageClassName: manual
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/mnt/data/"
---
# Source: generic-database-chart/templates/persistentvolumeclaim.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-db-pvc
  labels:
    app: postgres-db
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 2Gi
---
# Source: generic-database-chart/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: postgres-db
  labels:
    app: postgres-db
spec:
  type: NodePort
  selector:
    app: postgres-db
  ipFamilies:
    - IPv4
  ports:
    - name: postgres-db
      port: 5432
      nodePort: 30032
---
# Source: generic-database-chart/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-db
  labels:
    app: postgres-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-db
  template:
    metadata:
      labels:
        app: postgres-db
    spec:
      containers:
        - name: postgres-db
          image: "postgres:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          envFrom:
            - secretRef:
                name: postgres-db-secret
          resources:
            requests:
              memory: "256Mi"
              cpu: "500m"
            limits:
              memory: "512Mi"
              cpu: "1"
          volumeMounts:
            - mountPath: /var/lib/database
              name: postgres-db-data-volume

            - mountPath: /docker-entrypoint-initdb.d/initdb.sh
              subPath: initdb.sh
              name: postgres-db-initdb-volume

      volumes:
        - name: postgres-db-data-volume
          persistentVolumeClaim:
            claimName: postgres-db-pvc

        - name: postgres-db-initdb-volume
          configMap:
            name: postgres-db-config-map
